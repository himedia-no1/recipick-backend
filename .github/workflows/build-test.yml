name: Build Test

on:
  pull_request:
    branches: [ dev ]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changes.outputs.changes }}
      root-changed: ${{ steps.changes.outputs.root }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          list-files: json
          filters: |
            admin-api: 'apps/admin-api/**'
            admin-auth: 'apps/admin-auth/**'
            user-api: 'apps/user-api/**'
            user-auth: 'apps/user-auth/**'
            batch: 'apps/batch/**'
            crawler: 'apps/crawler/**'
            root:
              - '!apps/**'
              - '**'

  build-test:
    needs: detect-changes
    if: needs.detect-changes.outputs.matrix != '[]' || needs.detect-changes.outputs.root-changed == 'true'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        module: ${{ fromJSON(needs.detect-changes.outputs.root-changed == 'true' && '["admin-api", "admin-auth", "user-api", "user-auth", "batch", "crawler"]' || needs.detect-changes.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          build-args: MODULE=${{ matrix.module }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: recipick-backend-${{ matrix.module }}:test

      - name: Verify build
        run: |
          echo "✅ Build completed successfully for ${{ matrix.module }}"
          docker images | grep recipick-backend-${{ matrix.module }} || echo "❌ Image not found"